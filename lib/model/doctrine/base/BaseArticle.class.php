<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $artcategory_id
 * @property integer $gallery_id
 * @property string $title
 * @property clob $content
 * @property boolean $is_public
 * @property string $record_key
 * @property Doctrine_Collection $Files
 * @property Artcategory $Artcategory
 * @property Gallery $Gallery
 * @property Doctrine_Collection $ArticleFile
 * 
 * @method integer             getArtcategoryId()  Returns the current record's "artcategory_id" value
 * @method integer             getGalleryId()      Returns the current record's "gallery_id" value
 * @method string              getTitle()          Returns the current record's "title" value
 * @method clob                getContent()        Returns the current record's "content" value
 * @method boolean             getIsPublic()       Returns the current record's "is_public" value
 * @method string              getRecordKey()      Returns the current record's "record_key" value
 * @method Doctrine_Collection getFiles()          Returns the current record's "Files" collection
 * @method Artcategory         getArtcategory()    Returns the current record's "Artcategory" value
 * @method Gallery             getGallery()        Returns the current record's "Gallery" value
 * @method Doctrine_Collection getArticleFile()    Returns the current record's "ArticleFile" collection
 * @method Article             setArtcategoryId()  Sets the current record's "artcategory_id" value
 * @method Article             setGalleryId()      Sets the current record's "gallery_id" value
 * @method Article             setTitle()          Sets the current record's "title" value
 * @method Article             setContent()        Sets the current record's "content" value
 * @method Article             setIsPublic()       Sets the current record's "is_public" value
 * @method Article             setRecordKey()      Sets the current record's "record_key" value
 * @method Article             setFiles()          Sets the current record's "Files" collection
 * @method Article             setArtcategory()    Sets the current record's "Artcategory" value
 * @method Article             setGallery()        Sets the current record's "Gallery" value
 * @method Article             setArticleFile()    Sets the current record's "ArticleFile" collection
 * 
 * @package    ramaform
 * @subpackage model
 * @author     Paweł Sałajczyk <psalajczyk@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('qui_articles');
        $this->hasColumn('artcategory_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('gallery_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Nazwa/Tytuł',
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', 65532, array(
             'type' => 'clob',
             'notnull' => true,
             'default' => '<p></p>',
             'length' => 65532,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('record_key', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => false,
             'length' => 255,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('File as Files', array(
             'refClass' => 'ArticleFile',
             'local' => 'article_id',
             'foreign' => 'file_id'));

        $this->hasOne('Artcategory', array(
             'local' => 'artcategory_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Gallery', array(
             'local' => 'gallery_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('ArticleFile', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'qui_articles_translation',
             'fields' => 
             array(
              0 => 'title',
              1 => 'content',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'unique' => true,
             'canUpdate' => true,
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'title',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}