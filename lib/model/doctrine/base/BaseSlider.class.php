<?php

/**
 * BaseSlider
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $text
 * @property string $button
 * @property string $link
 * @property string $file
 * @property boolean $is_public
 * @property string $record_key
 * 
 * @method string  getText()       Returns the current record's "text" value
 * @method string  getButton()     Returns the current record's "button" value
 * @method string  getLink()       Returns the current record's "link" value
 * @method string  getFile()       Returns the current record's "file" value
 * @method boolean getIsPublic()   Returns the current record's "is_public" value
 * @method string  getRecordKey()  Returns the current record's "record_key" value
 * @method Slider  setText()       Sets the current record's "text" value
 * @method Slider  setButton()     Sets the current record's "button" value
 * @method Slider  setLink()       Sets the current record's "link" value
 * @method Slider  setFile()       Sets the current record's "file" value
 * @method Slider  setIsPublic()   Sets the current record's "is_public" value
 * @method Slider  setRecordKey()  Sets the current record's "record_key" value
 * 
 * @package    ramaform
 * @subpackage model
 * @author     Paweł Sałajczyk <psalajczyk@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSlider extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('qui_sliders');
        $this->hasColumn('text', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('button', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('link', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('file', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('record_key', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => false,
             'length' => 255,
             ));

        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'tableName' => 'qui_sliders_translation',
             'fields' => 
             array(
              0 => 'text',
              1 => 'button',
              2 => 'link',
             ),
             ));
        $sortable0 = new Doctrine_Template_Sortable();
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
        $this->actAs($sortable0);
    }
}